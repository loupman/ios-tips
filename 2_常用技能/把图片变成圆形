#图片变成圆形

这里有三种方式

## 1. layer属性设置圆角
可以任意设置圆角的大小，但是比较耗性能。而且如果你还需要设置阴影，就不能使用layer的shadow去设置了。在设置圆角时需要设置`masksToBounds`属性，导致超出view的可视区域时会被截掉。

```objective-c
UIImageView *imageView = [[UIImageView alloc] initWithImage:img];
    
imageView.layer.masksToBounds = YES;
imageView.layer.cornerRadius = 5.0f;
```

## 2. 给view添加mask layer

```objective-c
UIBezierPath *cycle = [UIBezierPath bezierPathWithRoundedRect:view.bounds cornerRadius:view.bounds.size.height/2.0];
CAShapeLayer *cycleLayer = [CAShapeLayer layer];
cycleLayer.path = cycle.CGPath;
    
UIImageView *imageView = [[UIImageView alloc] initWithImage:img];
imageView.layer.mask = cycleLayer;
```

## 3. 剪切图片 `CGContextAddEllipseInRect`

```objective-c
UIGraphicsBeginImageContextWithOptions(img.size, NO, 0);
CGContextRef ctr = UIGraphicsGetCurrentContext();
CGContextAddEllipseInRect(ctr, view.bounds);
CGContextClip(ctr);
[img drawInRect:view.bounds];
img =  UIGraphicsGetImageFromCurrentImageContext();
UIGraphicsEndImageContext();
    
UIImageView *imageView = [[UIImageView alloc] initWithImage:img];
```

三种效率对比


-(void)addCircle
{
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 80, 80)];
    view.backgroundColor = [UIColor redColor];
    
    UIGraphicsBeginImageContext(view.frame.size);
    [view.layer renderInContext:UIGraphicsGetCurrentContext()];
    UIImage *img =  UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    
    /**
                CGContextClip   UIBezierPath   cornerRadius
       1000        410             44               21
       10000       4467            348              188
       100000      47742             0               0
     *
     */
    
    NSDate *date = [NSDate date];
    int32_t count = 100000;
    
    for (int i = 0; i < count; i ++) {
        
        // --1
//        UIGraphicsBeginImageContextWithOptions(img.size, NO, 0);
//        CGContextRef ctr = UIGraphicsGetCurrentContext();
//        CGContextAddEllipseInRect(ctr, view.bounds);
//        CGContextClip(ctr);
//        [img drawInRect:view.bounds];
//        img =  UIGraphicsGetImageFromCurrentImageContext();
//        UIGraphicsEndImageContext();
        
        
        UIImageView *imageView = [[UIImageView alloc] initWithImage:img];
        
        // - 2
            UIBezierPath *cycle = [UIBezierPath bezierPathWithRoundedRect:view.bounds cornerRadius:view.bounds.size.height/2.0];
            CAShapeLayer *cycleLayer = [CAShapeLayer layer];
            cycleLayer.path = cycle.CGPath;
            imageView.layer.mask = cycleLayer;
        
        
        
        // --3
//        imageView.layer.masksToBounds = YES;
//        imageView.layer.cornerRadius = view.bounds.size.height/2.0;
        
        imageView.center = CGPointMake(_containerView.bounds.size.width/2.0, _containerView.bounds.size.height/2.0);
        [_containerView addSubview:imageView];
    }
    
    double cost = [[NSDate date] timeIntervalSinceDate:date];
    NSLog(@"-----%.0lf", cost * 1000);
}


